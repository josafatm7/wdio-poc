"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFilePath = exports.isFirefox = void 0;
const node_path_1 = __importDefault(require("node:path"));
const FILE_EXTENSION_REGEX = /\.[0-9a-z]+$/i;
function isFirefox(cap) {
    return cap.browserName?.toLowerCase().includes('firefox') || false;
}
exports.isFirefox = isFirefox;
/**
 * Resolves the given path into a absolute path and appends the
 * default filename as fallback when the provided path is a directory.
 *
 * @param  {String} logPath         relative file or directory path
 * @param  {String} defaultFilename default file name when filePath is a directory
 * @return {String}                 absolute file path
 */
function getFilePath(filePath, defaultFilename) {
    let absolutePath = node_path_1.default.resolve(filePath);
    if (!FILE_EXTENSION_REGEX.test(node_path_1.default.basename(absolutePath))) {
        absolutePath = node_path_1.default.join(absolutePath, defaultFilename);
    }
    return absolutePath;
}
exports.getFilePath = getFilePath;
//# sourceMappingURL=utils.js.map